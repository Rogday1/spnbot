from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.utils.keyboard import InlineKeyboardBuilder
import logging
import os

from src.config import settings

def get_start_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É" –∏ "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞"
    """
    builder = InlineKeyboardBuilder()
    
    # –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: 1. –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ settings
    game_url = os.environ.get('WEBAPP_PUBLIC_URL', '')
    
    # –ï—Å–ª–∏ URL –ø–æ–ª—É—á–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è, –¥–æ–±–∞–≤–ª—è–µ–º /game
    if game_url and game_url.strip():
        game_url = game_url.strip().rstrip('/')
        game_url = f"{game_url}/game"
    else:
        # –ï—Å–ª–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ—Ç URL, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        try:
            if hasattr(settings, 'WEBAPP_PUBLIC_URL') and settings.WEBAPP_PUBLIC_URL:
                game_url = settings.WEBAPP_PUBLIC_URL.strip().rstrip('/')
                game_url = f"{game_url}/game"
                logging.info(f"URL –ø–æ–ª—É—á–µ–Ω –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {game_url}")
            else:
                logging.error("URL –¥–ª—è WebApp –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
                game_url = ""
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ URL –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
            game_url = ""
    
    # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤—ã–≤–µ–¥–µ–º URL
    logging.info(f"URL –¥–ª—è WebApp: {game_url}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å https://
    if not game_url or not game_url.startswith("https://"):
        logging.error(f"‚ùå –û–®–ò–ë–ö–ê: URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https://, –ø–æ–ª—É—á–µ–Ω: {game_url}")
        
        # –í —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏ –≤—Å—ë —Ä–∞–≤–Ω–æ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        logging.warning(f"‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {game_url}")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º callback_data –≤–º–µ—Å—Ç–æ WebApp, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
        builder.add(InlineKeyboardButton(
            text="üéÆ –û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É",
            callback_data="game_unavailable"
        ))
    else:
        # URL –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É WebApp
        logging.info(f"‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ WebApp –∫–Ω–æ–ø–∫–∏ —Å URL: {game_url}")
        builder.add(InlineKeyboardButton(
            text="üéÆ –û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É",
            web_app=WebAppInfo(url=game_url)
        ))
    
    # –ö–Ω–æ–ø–∫–∞ "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞"
    builder.add(InlineKeyboardButton(
        text="üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞",
        callback_data="get_referral_link"
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É
    builder.adjust(1)
    
    return builder.as_markup() 

def get_subscription_keyboard(channels_info: list) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã –∏ –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏.
    
    Args:
        channels_info (list): –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞–Ω–∞–ª–∞—Ö
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
    """
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    for channel in channels_info:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
        channel_link = channel.get('invite_link')
        if not channel_link and channel.get('username'):
            channel_link = f"https://t.me/{channel['username']}"
        
        if not channel_link:
            continue
            
        # –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏
        status = "‚úÖ" if channel.get('is_subscribed', False) else "‚ùå"
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞–Ω–∞–ª–∞
        builder.add(InlineKeyboardButton(
            text=f"{status} {channel.get('title', '–ö–∞–Ω–∞–ª')}",
            url=channel_link
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫
    builder.add(InlineKeyboardButton(
        text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏",
        callback_data="check_subscriptions"
    ))
    
    # –ö–Ω–æ–ø–∫–∞ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
    builder.add(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
        callback_data="back_to_main_menu"
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É
    builder.adjust(1)
    
    return builder.as_markup() 